# paste from clipboard
map ctrl+v paste_from_clipboard 
# copy to clipboard
map ctrl+shift+c copy_to_clipboard 

# new tab split
map kitty_mod+\ launch --cwd=current --location=after 

# new tab
map kitty_mod+return launch --cwd=current --type=tab 

cursor_shape beam
cursor_blink_interval 0
inactive_text_alpha 0.8
scrollback_pager moar

# show scrollback
map kitty_mod+/ show_scrollback 

# move window forward
map kitty_mod+alt+j move_window_forward 
# move window backward
map kitty_mod+alt+k move_window_backward 

# next tab
map kitty_mod+k next_tab 
# previous tab
map kitty_mod+j previous_tab 

open_url_modifiers ctrl+shift 
tab_bar_edge top 
tab_bar_style custom
tab_separator ""

tab_title_template "{index} {f'{title[:30]}â€¦' if title.rindex(title[-1]) + 1 > 30 else (title.center(6) if (title.rindex(title[-1]) + 1) % 2 == 0 else title.center(5))}"

allow_remote_control yes
listen_on unix:/tmp/kitty
shell_integration enabled
tab_bar_min_tabs 1


# copy word
map kitty_mod+p>w kitten hints --type word --program wl-copy 
# copy hyperlink
map kitty_mod+p>y kitten hints --type hyperlink --program wl-copy 
# open hyperlink
map kitty_mod+p>o kitten hints --type hyperlink 
# open url
map kitty_mod+p>u kitten hints --type url 
# copy path
map kitty_mod+p>d launch --cwd=current --type=background zsh -c "pwd | wl-copy && exit" 

# previous tab
map kitty_mod+p>`  goto_tab -1 
# go to tab 1
map kitty_mod+p>1  goto_tab 1 
# go to tab 2
map kitty_mod+p>2  goto_tab 2 
# go to tab 3
map kitty_mod+p>3  goto_tab 3  
# go to tab 4
map kitty_mod+p>4  goto_tab 4 
# go to tab 5
map kitty_mod+p>5  goto_tab 5 
# go to tab 6
map kitty_mod+p>6  goto_tab 6 
# go to tab 7
map kitty_mod+p>7  goto_tab 7 
# go to tab 8
map kitty_mod+p>8  goto_tab 8 
# go to tab 9
map kitty_mod+p>9  goto_tab 9 
# go to tab 0
map kitty_mod+p>0  goto_tab 0 


# attach tmux
map alt+a>a launch --title=Tmux  --type=overlay-main zsh -c "[[ ! -f ~/.config/aliases/.bash_functions ]] || source ~/.config/aliases/.bash_functions && [[ ! -f ~/.config/fzf/fzf.sh ]] || source ~/.config/fzf/fzf.sh && tt" 

# list git
map kitty_mod+g launch --title=Lazygit  --cwd=current --type=overlay-main zsh -c "lazygit" 
# paste path
map kitty_mod+v send_text all vvv && c \r 
# paste path
map kitty_mod+c send_text all vvv -H && c \r 

map f1 toggle_marker itext 1 ERROR 2 WARNING 
map f2 create_marker
map f3 remove_marker
map f4 launch --stdin-source=@screen_scrollback --stdin-add-formatting moar 

mark1_background red
mark2_background orange
mark3_background green

# open yazi
map ctrl+p>l send_text all lf \r
# open download directory
map ctrl+p>j send_text all $DOWNLOAD_DIRECTORY && c \r 
# open project directory
map ctrl+p>p send_text all $CURRENT_WORK_PROJECT && c \r 
# open work directory
map ctrl+p>w send_text all $WORK_DIRECTORY && c \r 
# open config directory
map ctrl+p>c send_text all $CONFIG_DIRECTORY && c \r 
# open nvim config directory
map ctrl+p>n send_text all cd "$CONFIG_DIRECTORY/nvim" && c \r 
# open hypr config directory
map ctrl+p>h send_text all cd "$CONFIG_DIRECTORY/hypr" && c \r 

# map kitty_mod+f11    toggle_fullscreen
# map kitty_mod+f10    toggle_maximized
# map kitty_mod+f2     edit_config_file
# map kitty_mod+escape kitty_shell window
map kitty_mod+u>=    set_background_opacity +0.1
map kitty_mod+u>-    set_background_opacity -0.1
map kitty_mod+u>1    set_background_opacity 1
map kitty_mod+u>5    set_background_opacity 0.5
map kitty_mod+u>0    set_background_opacity 0
map kitty_mod+u>\    set_background_opacity default
dynamic_background_opacity yes
# map kitty_mod+delete clear_terminal reset active
